org: 10inoino
app: tateyomi-api
service: tateyomi-api

plugins:
  - serverless-layers
  - serverless-offline

provider:
  name: aws
  runtime: nodejs14.x
  region: ap-northeast-1
  memorySize: 256
  logRetentionInDays: 1
  apiGateway:
    minimumCompressionSize: 1024
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    LANG: ja_JP.UTF-8
    TABLE_NAME: DemoTable
  versionFunctions: false
  deploymentBucket:
    name: tateyomi-api-deploymentbucket
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TABLE_NAME}*"
# Lambdaの設定

package:
  individually: true
  include:
    - dist/**
  exclude:
    - "**"

# about lambda
functions:
  index:
    handler: dist/handler.handler
    events:
      - http:
          cors: true
          path: "/"
          method: any
      - http:
          cors: true
          path: "{proxy+}"
          method: any

# リソースの構築
resources:
  Resources:
    # DynamoDBの構築
    DynamoDbTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        # キーの型を指定
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        # キーの種類を指定（ハッシュorレンジキー）
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        # プロビジョニングするキャパシティーユニットの設定
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        # テーブル名の指定
        TableName: ${self:provider.environment.TABLE_NAME}
